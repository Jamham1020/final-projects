# -*- coding: utf-8 -*-
"""Lab5.1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q0pMtkSjexLXGWGZpDS7rk4ix5n3zfWk

# Lab 5.1 Data Exploration - Two Variables, Pt 2

1. We will continue with the college data set. 
  https://raw.githubusercontent.com/grbruns/cst383/master/College.csv
"""

# import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Write code to load the data. For example: 
# df = pd.read_csv('...College.csv', index_col=0)
# Record your work on the following problems in your Python file. 

df = pd.read_csv('https://raw.githubusercontent.com/grbruns/cst383/master/College.csv', index_col = 0)

"""3.	Derive a new column, ‘Size’, from the F.Undergrad variable.  The possible values of Size should be “small”, “medium”, or “large”.   The value “small” should be assigned to the colleges in the “bottom 3rd” of F.Undergrad values, “medium” should be assigned to the “middle 3rd”, and “large” to the “top 3rd”.  Use the Pandas ‘quantile’ function to find the corresponding F.Undergrad values.  (If you're not sure how to do this, see the hints right away).

  Create a barplot to make sure the number of small, medium, and large values are about the same.  When you make a quick plot for yourself, no need for adding a title or axis labels.  When you make a plot for a report or to share, it's important to use a good title and axis labels.

"""

breaks = df['F.Undergrad'].quantile([0, 0.33, 0.66, 1.0])
df['Size'] = pd.cut(df['F.Undergrad'], include_lowest=True, bins=breaks, labels=['small', 'medium', 'large'])

df['Size'].value_counts().plot.bar()
plt.xlabel('Size')
plt.ylabel('Count')
plt.title('Distribution of College Sizes')
plt.show()

"""4.	Use the faceting (also known as 'conditioning') idea to create three scatter plots, one for each value of your new variable size.  The scatterplot should show PhD on the x axis and Outstate on the y axis.

Look at the plots for a while and think their significance. Is the plot for large colleges different from the plot for small colleges?  What does this say about large and small colleges.  Also, do you see any interesting outliers?
"""

# use faceting to create three scater plots for each 'Size' category:
g = sns.FacetGrid(df, col ='Size', height = 4, aspect = 0.8)
g.map(plt.scatter, 'PhD', 'Outstate', s = 20, color="r")
plt.show()

"""In both the small are large colleges there is a concentrated amount in one portion of the group with PhD. What I find interesting is the medium where the concentration of students aren't as densed as the other two.

5. Repeat problem 5, but this time show a single scatterplot, with color used to distinguish small, medium, and large schools.  
Look at the plot you created for this problem compared to the last problem.  Which do you think is easier to interpret. Spend some time on this -- it's important.
"""

# Create a singular scatterplot with color distinguishing between 'Size' categories
sns.scatterplot(x = 'PhD', y = 'Outstate', hue = 'Size', data = df, s = 50)
plt.show()

"""The other plot is a bit easier to tell where the concentrate area but this also helps with comparing it all on one graph.

6. Repeat the last plot, but this time use both shape and color to indicate college size.  Do you think your new plot is easier to interpret than your plot of the previous problem?
"""

sns.scatterplot(x = 'PhD', y = 'Outstate', hue = 'Size', style = 'Size', data = df)
plt.show()

"""It makes it a bit easier to read with different shapes and color.

7.	Create three violin plots, showing the distribution of tuition at each of the three college size values.  My plot looks like this:
"""

sns.violinplot(x = 'Size', y = 'Outstate', data = df)
plt.xlabel('Size')
plt.ylabel('Outstate')
plt.title('Distribution of Tuition by College Size')
plt.show()

"""8. Repeat the last plot, but now show the raw data on the plot."""

sns.violinplot(x = 'Size', y = 'Outstate', data = df)
sns.stripplot(x = 'Size', y = 'Outstate', data = df, jitter = True, color = 'black', alpha = 0.5)
plt.xlabel('Size')
plt.ylabel('Outstate')
plt.title('Distribution of Tuition by College Size')
plt.show()

"""9.	If you still have time, repeat problem 4, but this time show 3 histograms of the PhD variable, one each for small, medium, and large schools.  Show the three histograms in a single column of plots.  Try to make your plot look similar to this:

"""

g = sns.FacetGrid(df, row = 'Size', height = 2.5, aspect = 1.8)
g.map(plt.hist, 'PhD', color = 'r', bins = np.arange(0, 110, 10), edgecolor = 'white')
plt.show()

"""10.	If you still have time, freely explore some questions you have about the college data.  For example, can you find out about selective schools with low graduation rates?"""

low_graduation_rate = df[df['Grad.Rate'] < 30]
print(low_graduation_rate)

